# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Get release
          id: get_release
          uses: bruceadams/get-release@v1.2.3
#           uses: tanish0499/create-release@v1.2.3
          env:
            GITHUB_TOKEN: ${{ github.token }}
#       - name: Checkout code
#         uses: actions/checkout@v2
#       - name: Get release
#         id: get_release
#         uses: tanish0499/create-release@v1.2.3
#         env:
#           GITHUB_TOKEN: ${{ github.token }}
#       - name: Build binary
#         run: cargo build --release --verbose
#       - name: Upload release binary
#         uses: actions/upload-release-asset@v1.0.2
#         env:
#           GITHUB_TOKEN: ${{ github.token }}
#         with:
#           upload_url: ${{ steps.get_release.outputs.upload_id }}
#           asset_path: ./target/release/my-widget
#           asset_name: my-widget
#           asset_content_type: application/octet-stream
          
#       # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.
#           ehco ${{ steps.get_release.outputs.upload_id }}
